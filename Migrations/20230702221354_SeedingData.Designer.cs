// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieTicketsApp.Data;

#nullable disable

namespace MovieTicketsApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230702221354_SeedingData")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieTicketsApp.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Bio for Actor 1",
                            FullName = "Actor 1",
                            ProfilePictureURL = "~/Images/Actors/actor1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Bio for Actor 2",
                            FullName = "Actor 2",
                            ProfilePictureURL = "~/Images/Actors/actor2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Bio for Actor 3",
                            FullName = "Actor 3",
                            ProfilePictureURL = "~/Images/Actors/actor3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Bio for Actor 4",
                            FullName = "Actor 4",
                            ProfilePictureURL = "~/Images/Actors/actor4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Bio for Actor 5",
                            FullName = "Actor 5",
                            ProfilePictureURL = "~/Images/Actors/actor5.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Bio for Actor 6",
                            FullName = "Actor 6",
                            ProfilePictureURL = "~/Images/Actors/actor5.jpg"
                        });
                });

            modelBuilder.Entity("MovieTicketsApp.Models.Actor_Movie", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("ActorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("Actors_Movies");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            MovieId = 3
                        },
                        new
                        {
                            ActorId = 2,
                            MovieId = 4
                        },
                        new
                        {
                            ActorId = 3,
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 4,
                            MovieId = 2
                        },
                        new
                        {
                            ActorId = 5,
                            MovieId = 7
                        },
                        new
                        {
                            ActorId = 4,
                            MovieId = 8
                        },
                        new
                        {
                            ActorId = 2,
                            MovieId = 7
                        },
                        new
                        {
                            ActorId = 5,
                            MovieId = 8
                        },
                        new
                        {
                            ActorId = 1,
                            MovieId = 6
                        },
                        new
                        {
                            ActorId = 3,
                            MovieId = 8
                        },
                        new
                        {
                            ActorId = 4,
                            MovieId = 7
                        },
                        new
                        {
                            ActorId = 2,
                            MovieId = 6
                        },
                        new
                        {
                            ActorId = 5,
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 2,
                            MovieId = 3
                        },
                        new
                        {
                            ActorId = 5,
                            MovieId = 4
                        },
                        new
                        {
                            ActorId = 4,
                            MovieId = 5
                        },
                        new
                        {
                            ActorId = 1,
                            MovieId = 5
                        },
                        new
                        {
                            ActorId = 6,
                            MovieId = 6
                        });
                });

            modelBuilder.Entity("MovieTicketsApp.Models.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description for Cinema 1",
                            Logo = "~/Images/Cinemas/img1.jpg",
                            Name = "Cinema 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description for Cinema 1",
                            Logo = "~/Images/Cinemas/img2.jpg",
                            Name = "Cinema 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description for Cinema 1",
                            Logo = "~/Images/Cinemas/img3.jpg",
                            Name = "Cinema 3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description for Cinema 1",
                            Logo = "~/Images/Cinemas/img4.jpg",
                            Name = "Cinema 4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description for Cinema 1",
                            Logo = "~/Images/Cinemas/img5.jpg",
                            Name = "Cinema 5"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description for Cinema 1",
                            Logo = "~/Images/Cinemas/img5.jpg",
                            Name = "Cinema 6"
                        });
                });

            modelBuilder.Entity("MovieTicketsApp.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieCategory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.HasIndex("ProducerId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaId = 1,
                            Description = "Description for movie 1",
                            EndDate = new DateTime(2023, 6, 30, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3014),
                            ImageURL = "~/Images/Movies/movie1.jpeg",
                            MovieCategory = 3,
                            Name = "Movie 1",
                            Price = 36.700000000000003,
                            ProducerId = 5,
                            StartDate = new DateTime(2023, 6, 22, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(2995)
                        },
                        new
                        {
                            Id = 2,
                            CinemaId = 1,
                            Description = "Description for movie 2",
                            EndDate = new DateTime(2023, 7, 14, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3017),
                            ImageURL = "~/Images/Movies/movie2.jpg",
                            MovieCategory = 5,
                            Name = "Movie 2",
                            Price = 39.5,
                            ProducerId = 3,
                            StartDate = new DateTime(2023, 6, 7, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3016)
                        },
                        new
                        {
                            Id = 3,
                            CinemaId = 3,
                            Description = "Description for movie 3",
                            EndDate = new DateTime(2023, 7, 22, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3020),
                            ImageURL = "~/Images/Movies/movie3.jpg",
                            MovieCategory = 1,
                            Name = "Movie 3",
                            Price = 35.899999999999999,
                            ProducerId = 4,
                            StartDate = new DateTime(2023, 7, 5, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3019)
                        },
                        new
                        {
                            Id = 4,
                            CinemaId = 2,
                            Description = "Description for movie 4",
                            EndDate = new DateTime(2023, 7, 22, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3033),
                            ImageURL = "~/Images/Movies/movie4.jpg",
                            MovieCategory = 1,
                            Name = "Movie 4",
                            Price = 35.899999999999999,
                            ProducerId = 1,
                            StartDate = new DateTime(2023, 6, 17, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3031)
                        },
                        new
                        {
                            Id = 5,
                            CinemaId = 4,
                            Description = "Description for movie 5",
                            EndDate = new DateTime(2023, 7, 24, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3035),
                            ImageURL = "~/Images/Movies/movie5.jpg",
                            MovieCategory = 4,
                            Name = "Movie 5",
                            Price = 35.899999999999999,
                            ProducerId = 5,
                            StartDate = new DateTime(2023, 6, 7, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3034)
                        },
                        new
                        {
                            Id = 6,
                            CinemaId = 5,
                            Description = "Description for movie 6",
                            EndDate = new DateTime(2023, 7, 22, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3038),
                            ImageURL = "~/Images/Movies/movie6.jpg",
                            MovieCategory = 1,
                            Name = "Movie 6",
                            Price = 35.899999999999999,
                            ProducerId = 2,
                            StartDate = new DateTime(2023, 7, 5, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3037)
                        },
                        new
                        {
                            Id = 7,
                            CinemaId = 2,
                            Description = "Description for movie 7",
                            EndDate = new DateTime(2023, 6, 22, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3040),
                            ImageURL = "~/Images/Movies/movie7.jpg",
                            MovieCategory = 3,
                            Name = "Movie 7",
                            Price = 35.899999999999999,
                            ProducerId = 4,
                            StartDate = new DateTime(2023, 7, 17, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3040)
                        },
                        new
                        {
                            Id = 8,
                            CinemaId = 1,
                            Description = "Description for movie 8",
                            EndDate = new DateTime(2023, 7, 14, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3043),
                            ImageURL = "~/Images/Movies/movie8.jpg",
                            MovieCategory = 2,
                            Name = "Movie 8",
                            Price = 35.899999999999999,
                            ProducerId = 4,
                            StartDate = new DateTime(2023, 5, 30, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3042)
                        },
                        new
                        {
                            Id = 9,
                            CinemaId = 1,
                            Description = "Description for movie 8",
                            EndDate = new DateTime(2023, 7, 14, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3045),
                            ImageURL = "~/Images/Movies/movie8.jpg",
                            MovieCategory = 2,
                            Name = "Movie 9",
                            Price = 35.899999999999999,
                            ProducerId = 6,
                            StartDate = new DateTime(2023, 5, 30, 23, 13, 54, 15, DateTimeKind.Local).AddTicks(3044)
                        });
                });

            modelBuilder.Entity("MovieTicketsApp.Models.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Bio for Producer 1",
                            FullName = "Producer 1",
                            ProfilePictureURL = "~/Images/Producers/producer1.jpeg"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Bio for Producer 2",
                            FullName = "Producer 2",
                            ProfilePictureURL = "~/Images/Producers/producer2.jpeg"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Bio for Producer 3",
                            FullName = "Producer 3",
                            ProfilePictureURL = "~/Images/Producers/producer3.jpeg"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Bio for Producer 4",
                            FullName = "Producer 4",
                            ProfilePictureURL = "~/Images/Producers/producer4.jpeg"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Bio for Producer 5",
                            FullName = "Producer 5",
                            ProfilePictureURL = "~/Images/Producers/producer5.jpeg"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Bio for Producer 6",
                            FullName = "Producer 6",
                            ProfilePictureURL = "~/Images/Producers/producer5.jpeg"
                        });
                });

            modelBuilder.Entity("MovieTicketsApp.Models.Actor_Movie", b =>
                {
                    b.HasOne("MovieTicketsApp.Models.Actor", "Actor")
                        .WithMany("Actors_Movies")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieTicketsApp.Models.Movie", "Movie")
                        .WithMany("Actors_Movies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieTicketsApp.Models.Movie", b =>
                {
                    b.HasOne("MovieTicketsApp.Models.Cinema", "Cinema")
                        .WithMany("Movies")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieTicketsApp.Models.Producer", "Producer")
                        .WithMany("Movies")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("MovieTicketsApp.Models.Actor", b =>
                {
                    b.Navigation("Actors_Movies");
                });

            modelBuilder.Entity("MovieTicketsApp.Models.Cinema", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MovieTicketsApp.Models.Movie", b =>
                {
                    b.Navigation("Actors_Movies");
                });

            modelBuilder.Entity("MovieTicketsApp.Models.Producer", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
